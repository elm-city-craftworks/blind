#!/usr/bin/env ruby 

require 'ray'

require_relative "../lib/blind"
require_relative "../lib/blind/ui/game_runner"
require_relative "../config/worlds"

# Optionally set the number of mines in the game.
# If an argument is not provided, the game will create 30 mines by default

if ARGV[0]
  num_mines = ARGV[0].to_i

  # NOTE: This is a workaround for problem I spotted with having more
  # than 64 sounds in the game playing simultaneously!
  abort("Too many mines! Try 60 or fewer.") if num_mines > 60
else
  num_mines = 30
end

# Take care of some initial boilerplate for the game

world   = Blind::Worlds.trivial#original(num_mines)
game    = Blind::UI::GamePresenter.new(world)
message = "Find the phone, avoid the beeping mines and the sirens\n"+
          "(Use WASD keys to move)"

Ray::Audio.pos = [0,0,0]

game_runner = Blind::UI::GameRunner.new

scene         = game_runner.registered_scene(:main)
scene.game    = game
scene.message = message

game_runner.run
